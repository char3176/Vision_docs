# NOT FINSHED YET.  STILL COMPOSING.


sudo raspi-config
  - Under "Advanced Options" > "Expand Filesystem"
  - Activate SSH
  - Activate camera
  - set your language, timezone, keyboard under "Localization options"
sudo reboot

sudo apt purge wolfram-engine libreoffice*
sudo apt clean
sudo apt autoremove

sudo apt update
sudo apt upgrade
sudo reboot

sudo apt install -y build-essential cmake unzip pkg-config
sudo apt install -y libjpeg-dev libpng-dev libtiff-dev
sudo apt install -y libavcodec-dev libavformat-dev libswscale-dev libv4l-dev
sudo apt install -y libxvidcore-dev libx264-dev
sudo apt install -y libgtk-3-dev
sudo apt install -y libcanberra-gtk*
sudo apt install -y libatlas-base-dev gfortran
sudo apt install -y python3-dev 
sudo apt install -y git

sudo apt install -y gimp
sudo apt install -y vim-nox

export TDATE=`date "+%Y.%m.%d.%H%M%S"`

cd ${HOME}
mkdir -p opencv_install_src/download_date_${TDATE}
cd opencv_install_src/download_date_${TDATE}
wget -O opencv.zip https://github.com/opencv/opencv/archive/4.2.0.zip
wget -O opencv_contrib.zip https://github.com/opencv/opencv_contrib/archive/4.2.0.zip
unzip opencv.zip
unzip opencv_contrib.zip
mv opencv-4.2.0 opencv
mv opencv_contrib-4.2.0 opencv_contrib

# alternatively use git to get most recent development code
# (Beware, there be dragons when using development code instead of release version code)
# git clone https://github.com/opencv/opencv
# git clone https://github.com/opencv/opencv_contrib

cd opencv

sudo apt remove -y python3-ipython
sudo apt remove -y python3-numpy 

sudo pip3 install numpy
sudo pip3 install ipython
sudo pip3 install matplotlib

mkdir build
cd build

cmake -D CMAKE_BUILD_TYPE=RELEASE \
    -D CMAKE_INSTALL_PREFIX=/usr/local \
    -D OPENCV_EXTRA_MODULES_PATH=~/opencv_install_src/download_date_${TDATE}/opencv_contrib/modules \
    -D ENABLE_NEON=ON \
    -D ENABLE_VFPV3=ON \
    -D BUILD_TESTS=OFF \
    -D PYTHON_DEFAULT_EXECUTABLE=$(which python3) \
    -D INSTALL_PYTHON_EXAMPLES=OFF \
    -D OPENCV_ENABLE_NONFREE=ON \
    -D CMAKE_SHARED_LINKER_FLAGS=-latomic \
    -D WITH_OPENCL=OFF \
    -D BUILD_PERF_TESTS=OFF \
    -D BUILD_EXAMPLES=OFF ..

# If compiling with java support
#  1. Insure you have JAVA JDK installed
#  2. Add below two flags to cmake command:
#      -D JAVA_AWT_LIBRARY=$JAVA_HOME/lib/libawt.so \
#      -D JAVA_JVM_LIBRARY=$JAVA_HOME/lib/server/libjvm.so \


# Edit /etc/dphys-swapfile to increase swap file size so code compiles faster.
sudo nano /etc/dphys-swapfile

# comment out the "CONF_SWAPSIZE=100" or similar line and uncomment
# "CONF_SWAPSIZE=2048" line

# Save file

sudo /etc/init.d/dphys-swapfile stop
sudo /etc/init.d/dphys-swapfile start

make -j4
sudo make install
sudo ldconfig

# Edit /etc/dphys-swapfile to change the swap file size back to original value.
sudo nano /etc/dphys-swapfile

# comment out the "CONF_SWAPSIZE=2048" and uncomment the "CONF_SWAPSIZE=100" or similar line 

# save file

sudo /etc/init.d/dphys-swapfile stop
sudo /etc/init.d/dphys-swapfile start

sudo apt install -y mlocate
sudo updatedb
export cv2location=`locate cv2.cypthon | grep "usr/local"`
export cv2libdir=`dirname $[cv2location]`
sudo ln -s $cv2location $cv2libdir/cv2.so

cd ${HOME}

#Add next line to bottom of ${HOME}/.bashrc
echo "export LD_PRELOAD=/usr/lib/arm-linux-gnueabihf/libatomic.so.1.2.0" >> ~/.bashrc


#sudo pip install opencv-python opencv-utils opencv-contrib-python
sudo pip3 install matplotlib
sudo pip3 install picamera
sudo pip3 install ipython
sudo pip3 install imutils
sudo pip3 install argparse
sudo pip3 install pynetworktables


# install nedit
sudo apt install -y nedit

#install vscode (as code-oss)
wget https://packagecloud.io/headmelted/codebuilds/gpgkey -O - | sudo apt-key add -
curl -L https://raw.githubusercontent.com/headmelted/codebuilds/master/docs/installers/apt.sh | sudo bash


